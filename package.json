{
  "name": "benchmark-5",
  "version": "1.0.0",
  "description": "/*\r     Portfolio Challenge: Netflix\r     You are creating the API for your Netfix App\r     Each Media in you App has these info:\r     {\r         \"Title\": \"The Lord of the Rings: The Fellowship of the Ring\",\r         \"Year\": \"2001\",\r         \"imdbID\": \"tt0120737\",  //UNIQUE\r         \"Type\": \"movie\",\r         \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMTM5MzcwOTg4MF5BMl5BanBnXkFtZTgwOTQwMzQxMDE@._V1_SX300.jpg\"\r     }\r     And the reviews looks like:\r     {\r         \"_id\": \"123455\", //SERVER GENERATED\r         \"comment\": \"A good book but definitely I don't like many parts of the plot\", //REQUIRED\r         \"rate\": 3, //REQUIRED, max 5\r         \"elementId\": \"5d318e1a8541744830bef139\", //REQUIRED = IMDBID\r         \"createdAt\": \"2019-08-01T12:46:45.895Z\" // SERVER GENERATED\r     }\r     //BACKEND\r     You are in charge of building the Backend using NodeJS + Express. \r     The backend should include the extra following features:\r     CRUD for Media ( /media GET, POST, DELETE, PUT)\r     CRUD for Reviews ( /reviews GET, POST, DELETE, PUT)\r     Extra method for media's image upload (POST /media/{id}/upload)\r     Add an extra method to get all the reviews of a specific media (GET /media/{id}/reviews)\r     [EXTRA] GET /media/:id should fetch the information from omdbapi for that specific media\r     [EXTRA] POST /media/catalogue?title=whatever should return a PDF containing all the movies containing the given word in the title\r     [EXTRA] GET /media?title=book => should return media with title containing \"book\" (must be possible to filter also for year and type)\r     [EXTRA] GET /media should return the movies sorted by the Avg Rate value\r     [EXTRA] POST /media/sendCatalogue should send and email with the catalogue that match the title to the given address in the req.body: \r             { title=whatever,email=my@email.com}\r     [EXTRA] GET /media/search â‡’ given a title in the query search in omdb catalogue by title\r     //FRONTEND\r     Connect this app to your Netflix App.\r     The user should be able to surf movies (remember you have to use http://www.omdbapi.com/ to get details when the user enters a movie)\r     //DEPLOY\r     Both client and server App should be deployed on your Heroku account.\r     // SAMPLE DATA:\r     [\r     {\r         \"Title\": \"The Lord of the Rings: The Fellowship of the Ring\",\r         \"Year\": \"2001\",\r         \"imdbID\": \"tt0120737\",\r         \"Type\": \"movie\",\r         \"Poster\": \"https://m.media-amazon.com/images/M/MV5BN2EyZjM3NzUtNWUzMi00MTgxLWI0NTctMzY4M2VlOTdjZWRiXkEyXkFqcGdeQXVyNDUzOTQ5MjY@._V1_SX300.jpg\"\r     },\r     {\r         \"Title\": \"The Lord of the Rings: The Return of the King\",\r         \"Year\": \"2003\",\r         \"imdbID\": \"tt0167260\",\r         \"Type\": \"movie\",\r         \"Poster\": \"https://m.media-amazon.com/images/M/MV5BNzA5ZDNlZWMtM2NhNS00NDJjLTk4NDItYTRmY2EwMWZlMTY3XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg\"\r     },\r     {\r         \"Title\": \"The Lord of the Rings: The Two Towers\",\r         \"Year\": \"2002\",\r         \"imdbID\": \"tt0167261\",\r         \"Type\": \"movie\",\r         \"Poster\": \"https://m.media-amazon.com/images/M/MV5BNGE5MzIyNTAtNWFlMC00NDA2LWJiMjItMjc4Yjg1OWM5NzhhXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg\"\r     },\r     {\r         \"Title\": \"Lord of War\",\r         \"Year\": \"2005\",\r         \"imdbID\": \"tt0399295\",\r         \"Type\": \"movie\",\r         \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMTYzZWE3MDAtZjZkMi00MzhlLTlhZDUtNmI2Zjg3OWVlZWI0XkEyXkFqcGdeQXVyNDk3NzU2MTQ@._V1_SX300.jpg\"\r     },\r     {\r         \"Title\": \"Lords of Dogtown\",\r         \"Year\": \"2005\",\r         \"imdbID\": \"tt0355702\",\r         \"Type\": \"movie\",\r         \"Poster\": \"https://m.media-amazon.com/images/M/MV5BNDBhNGJlOTAtM2ExNi00NmEzLWFmZTQtYTZhYTRlNjJjODhmXkEyXkFqcGdeQXVyNDk3NzU2MTQ@._V1_SX300.jpg\"\r     },\r     {\r         \"Title\": \"The Lord of the Rings\",\r         \"Year\": \"1978\",\r         \"imdbID\": \"tt0077869\",\r         \"Type\": \"movie\",\r         \"Poster\": \"https://m.media-amazon.com/images/M/MV5BOGMyNWJhZmYtNGQxYi00Y2ZjLWJmNjktNTgzZWJjOTg4YjM3L2ltYWdlXkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_SX300.jpg\"\r     },\r     {\r         \"Title\": \"Lord of the Flies\",\r         \"Year\": \"1990\",\r         \"imdbID\": \"tt0100054\",\r         \"Type\": \"movie\",\r         \"Poster\": \"https://m.media-amazon.com/images/M/MV5BOTI2NTQyODk0M15BMl5BanBnXkFtZTcwNTQ3NDk0NA@@._V1_SX300.jpg\"\r     },\r     {\r         \"Title\": \"The Lords of Salem\",\r         \"Year\": \"2012\",\r         \"imdbID\": \"tt1731697\",\r         \"Type\": \"movie\",\r         \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMjA2NTc5Njc4MV5BMl5BanBnXkFtZTcwNTYzMTcwOQ@@._V1_SX300.jpg\"\r     },\r     {\r         \"Title\": \"Greystoke: The Legend of Tarzan, Lord of the Apes\",\r         \"Year\": \"1984\",\r         \"imdbID\": \"tt0087365\",\r         \"Type\": \"movie\",\r         \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMTM5MzcwOTg4MF5BMl5BanBnXkFtZTgwOTQwMzQxMDE@._V1_SX300.jpg\"\r     },\r     {\r         \"Title\": \"Lord of the Flies\",\r         \"Year\": \"1963\",\r         \"imdbID\": \"tt0057261\",\r         \"Type\": \"movie\",\r         \"Poster\": \"https://m.media-amazon.com/images/M/MV5BOGEwYTlhMTgtODBlNC00ZjgzLTk1ZmEtNmNkMTEwYTZiM2Y0XkEyXkFqcGdeQXVyMzU4Nzk4MDI@._V1_SX300.jpg\"\r     },\r     {\r         \"Title\": \"The Avengers\",\r         \"Year\": \"2012\",\r         \"imdbID\": \"tt0848228\",\r         \"Type\": \"movie\",\r         \"Poster\": \"https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SX300.jpg\"\r     },\r     {\r         \"Title\": \"Avengers: Infinity War\",\r         \"Year\": \"2018\",\r         \"imdbID\": \"tt4154756\",\r         \"Type\": \"movie\",\r         \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMjMxNjY2MDU1OV5BMl5BanBnXkFtZTgwNzY1MTUwNTM@._V1_SX300.jpg\"\r     },\r     {\r         \"Title\": \"Avengers: Age of Ultron\",\r         \"Year\": \"2015\",\r         \"imdbID\": \"tt2395427\",\r         \"Type\": \"movie\",\r         \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMTM4OGJmNWMtOTM4Ni00NTE3LTg3MDItZmQxYjc4N2JhNmUxXkEyXkFqcGdeQXVyNTgzMDMzMTg@._V1_SX300.jpg\"\r     },\r     {\r         \"Title\": \"Avengers: Endgame\",\r         \"Year\": \"2019\",\r         \"imdbID\": \"tt4154796\",\r         \"Type\": \"movie\",\r         \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMTc5MDE2ODcwNV5BMl5BanBnXkFtZTgwMzI2NzQ2NzM@._V1_SX300.jpg\"\r     }\r ]\r */",
  "main": "index.js",
  "dependencies": {
    "cors": "^2.8.5",
    "dotenv": "^8.2.0",
    "express": "^4.17.3",
    "express-list-endpoints": "^4.0.1",
    "express-validator": "^6.6.0",
    "init": "^0.1.2",
    "nodemon": "^2.0.4",
    "npm": "^6.14.5",
    "uniqid": "^5.2.0"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "dev": "nodemon -r dotenv/config ./src/server.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/eriseld181/benchmark-5.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/eriseld181/benchmark-5/issues"
  },
  "homepage": "https://github.com/eriseld181/benchmark-5#readme"
}
